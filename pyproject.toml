[build-system]
requires = ["setuptools>=45", "setuptools-scm[toml]>=6.2", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "nessai"
authors = [
    {name = "Michael J. Williams", email = "michaeljw1@googlemail.com"},
]
description = "Nessai: Nested Sampling with Artificial Intelligence"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
keywords = [
    "nested sampling",
    "normalizing flows",
    "machine learning",
]
dependencies = [
    "glasflow",
    "h5py>=3.0",
    "matplotlib>=2.0",
    "numpy>=1.9",
    "pandas",
    "scipy>0.16",
    "seaborn",
    "torch>=1.11.0",
    "importlib-metadata; python_version < '3.10'",
]
dynamic = [
    "version",
]

[project.urls]
"Homepage" = "https://github.com/mj-will/nessai"
"Documentation" = "https://nessai.readthedocs.io/"

[project.optional-dependencies]
test = [
    "pytest",
    "pytest-cov",
    "pytest-timeout",
    "pytest-rerunfailures",
    "pytest-integration",
]
gw = [
    "lalsuite; sys_platform != 'win32'",
    "bilby",
    "astropy",
]
clustering = [
    "faiss-cpu>=1.7.3",
]
dev = [
    "pre-commit",
    "ray[default]; sys_platform != 'win32' and python_version < '3.12'",
    "multiprocess",
    "corner",
    "ruff",
    "faiss-cpu",
]
docs = [
    "sphinx",
    "sphinx_rtd_theme",
    "numpydoc",
    "sphinx-autoapi",
]
nflows = [
    "nflows",
]

[tool.setuptools_scm]
version_scheme = "release-branch-semver"

[tool.pytest.ini_options]
addopts = [
    "-ra",
    "--cov=nessai",
    "--import-mode=importlib",
]
testpaths = [
    "tests"
]

[tool.coverage.run]
source = [
    "nessai"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
]

[tool.ruff]
line-length = 79
indent-width = 4
target-version = "py39"

[tool.ruff.lint]
# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
extend-select = ["I"]
